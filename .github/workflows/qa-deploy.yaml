name: Nishat-frontend-Pack-Station-QA Deploy Image

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Select the branch to deploy (e.g., qa or production)'
        required: true
        default: 'qa'

jobs:
  deploy:
    runs-on: [self-hosted, rainbow-production]
    name: Deploy Latest Image on Docker
    steps:
      - name: Run SH Command
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker stop frontend-pack-station-qa || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker rm frontend-pack-station-qa || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker login ${{secrets.REGISTRY_URL}} -u ${{secrets.REGISTRY_USERNAME}} -p ${{secrets.REGISTRY_PASSWORD}} || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker rmi wimetrixcregistery.azurecr.io/wimetrixcregistery/Nishat-frontend-pack-stationqa:latest || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker run -d -p 3003:3000 --restart unless-stopped --name frontend-pack-station-qa wimetrixcregistery.azurecr.io/wimetrixcregistery/Nishat-frontend-pack-stationqa:latest
  
  Notification:
    runs-on: ubuntu-latest
    name: Send Notifications to Teams
    needs: [deploy]
    if: always()
    steps:
      - name: Check failure
        run: |
          json='${{ toJson(needs) }}'
          for key in $(echo "$json" | jq -r 'keys[]'); do
            status=$(echo "$json" | jq -r ".\"$key\".result")
            if [[ "$status" != "success" ]]; then
              exit 1
            fi
          done

      - name: Send Notification
        # cSpell: disable-next-line
        uses: skitionek/notify-microsoft-teams@v1.0.8
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{toJson(needs)}}
          job: ${{toJson(job)}}
          steps: ${{toJson(steps)}}
